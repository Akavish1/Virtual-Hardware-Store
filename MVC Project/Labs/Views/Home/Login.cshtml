@model Labs.ModelView.ProductViewModel
@using Labs.Models
@using Labs.ModelView
@using Labs.DAL

@*manages the login functionallity while showing off my unique and unparalelled capability to display the product list asynchronously with json*@
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Log In</title>
</head>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<body>
    <div>
        <br />
        <br />
        <form action="Login" method="post">
            <div class="alert alert-warning alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>@Session["Error"]</strong>
                <br />
            </div>
            <br />
            <i>Username:</i> <input id="Text1" name="txtusername" type="text" />
            <br />
            <i>Password:</i> <input id="Password1" name="txtpassword" type="password" />
            <br />
            <input id="Submit1" type="submit" value="Log in" />
        </form>
    </div>
    <br />
    <div id="status"></div>
    <br />
    <span style="color:aquamarine">Products in store:</span>
    <br />
    <span style="color:red">DISPLAYED ASYNCHRONOUSLY</span>
    <br />
        <table id="prodTable">
            <tr>
                <td>Product Name</td>
                <td>Price</td>
                <td>Quantity left</td>
            </tr>
        </table>
            <script language="JavaScript">
                $("#status").text("Loading...");
                $.get("ProductsByJson", null, BindData);
                function BindData(products)
                {
                    var tbl = $("#prodTable")
                    for (i = 0; i < products.length; i++)
                    {
                        var newRow = "<tr>" +
                            "<td>" + products[i].ProductName + "</td>" +
                            "<td>" + products[i].Price + "</td>" +
                            "<td>" + products[i].Quantity + "</td>" +
                            "</tr>"
                        tbl.append(newRow);
                    }
                    $("#status").text("");
                }
            </script>
    <br />
</body>
</html>
